import clsx from 'clsx';
import scss from './ThanksPageOnFormDownloadAutoService.module.scss';
import { useState } from 'react';
import { addContactForm } from '../../store/slices/contactFormSlice';
import { useDispatch } from 'react-redux';
import ThanksPageContactForm from './ThanksPageContactForm/ThanksPageContactForm';
import { BsArrowLeftShort, BsBoxArrowInDown } from 'react-icons/bs';

export default function ThanksPageOnFormDownloadAutoService() {
  const dispatch = useDispatch();

  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    gdprConsent: false,
  });

  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitMessage, setSubmitMessage] = useState('');

  const handleInputChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!formData.gdprConsent) {
      setSubmitMessage('–ë—É–¥—å –ª–∞—Å–∫–∞, —É—Ö–≤–∞–ª—ñ—Ç—å –ø–æ–ª—ñ—Ç–∏–∫—É –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è.');
      return;
    }

    setIsSubmitting(true);
    setSubmitMessage('');

    try {
      const dateCreate = new Date().toISOString();
      const contactFormData = {
        dateCreate,
        email: formData.email,
        name: formData.name,
        phone: formData.phone,
        source: 'thanks', // Add source to indicate thanks page form
        status: '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
        plan: '–ß–µ–∫-–ª–∏—Å—Ç –°–¢–û PDF', // Add plan to indicate the form purpose
      };

      // Dispatch to add to 'contactform' collection
      await dispatch(addContactForm(contactFormData)).unwrap();

      setSubmitMessage('–î—è–∫—É—î–º–æ! –ú–∏ –∑–≤`—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –ø—Ä–æ—Ç—è–≥–æ–º 24 –≥–æ–¥–∏–Ω.');
      setFormData({
        name: '',
        email: '',
        phone: '',
        gdprConsent: false,
      });
    } catch (error) {
      setSubmitMessage('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ —Ñ–æ—Ä–º–∏. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
      console.error('Form submission error:', error);
    } finally {
      setIsSubmitting(false);
    }
  };

  // Function to handle PDF download
  const handleDownload = () => {
    const pdfUrl = '/CheckListSto.pdf'; // Path to the PDF in the public folder
    const link = document.createElement('a');
    link.href = pdfUrl;
    link.download = 'CheckListSto.pdf'; // Name of the file when downloaded
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link); // Clean up
  };

  const handleBack = () => {
    window.history.back();
  };

  return (
    <div className={scss.backgroundBlock}>
      <div className={scss.container}>
        <div className={scss.thanksPageBlock}>
          <img src='/images/imageForThanksPageDownload.png' alt='imageForThanksPageDownload' />
          <h2>
            <span>üéâ</span> –î—è–∫—É—î–º–æ, –≤–∞—à —á–µ–∫-–ª–∏—Å—Ç –≤–∂–µ —É –≤–∞—Å!
          </h2>
          {/* <p className={scss.thanksPageDescriptionOrange}>
            –ù–µ–º–∞ –ª–∏—Å—Ç–∞? –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –í—Ö—ñ–¥–Ω—ñ ‚Üí –ü—Ä–æ–º–æ–∞–∫—Ü—ñ—ó/–°–ø–∞–º/–£—Å—ñ –ª–∏—Å—Ç–∏.
          </p> */}
          {/* <p className={clsx(scss.thanksPageDescriptionOrange, scss.thanksPageDescription)}>
            –í–∏ –∑—Ä–æ–±–∏–ª–∏ –ø–µ—Ä—à–∏–π –∫—Ä–æ–∫ –¥–æ —Ç–æ–≥–æ, —â–æ–± –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —á–æ–º—É Google-—Ä–µ–∫–ª–∞–º–∞ –º–æ–∂–µ ‚Äú–∑–ª–∏–≤–∞—Ç–∏‚Äù –±—é–¥–∂–µ—Ç
            —ñ —è–∫ —Ü—å–æ–≥–æ —É–Ω–∏–∫–Ω—É—Ç–∏. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–∞—à—É –ø–æ—à—Ç—É ‚Äî –º–∏ –Ω–∞–¥—ñ—Å–ª–∞–ª–∏ —á–µ–∫-–ª–∏—Å—Ç —ñ–∑ –ø–æ–∫—Ä–æ–∫–æ–≤–∏–º–∏
            —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è–º–∏.
          </p> */}

          <p className={clsx(scss.thanksPageDescriptionOrange, scss.thanksPageDescription)}>
            –í–∏ –∑—Ä–æ–±–∏–ª–∏ –ø–µ—Ä—à–∏–π –∫—Ä–æ–∫ –¥–æ —Ç–æ–≥–æ, —â–æ–± –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —á–æ–º—É Google-—Ä–µ–∫–ª–∞–º–∞ –º–æ–∂–µ ‚Äú–∑–ª–∏–≤–∞—Ç–∏‚Äù –±—é–¥–∂–µ—Ç
            —ñ —è–∫ —Ü—å–æ–≥–æ —É–Ω–∏–∫–Ω—É—Ç–∏. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É "–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏" —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤–∞—à —á–µ–∫-–ª–∏—Å—Ç —ñ–∑
            –ø–æ–∫—Ä–æ–∫–æ–≤–∏–º–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è–º–∏.
          </p>
          <button className={scss.downloadButton} onClick={handleDownload}>
            –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ <BsBoxArrowInDown className={scss.iconDownload} />
          </button>
          <p className={clsx(scss.thanksPageDescriptionOrange, scss.thanksPageDescription)}>
            üí° –ü–æ—Ä–∞–¥–∞:
          </p>
          <p
            className={clsx(
              scss.thanksPageDescriptionOrange,
              scss.thanksPageDescription,
              scss.noMarg,
            )}>
            –Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –∑–∞–æ—â–∞–¥–∏—Ç–∏ —á–∞—Å —ñ –æ—Ç—Ä–∏–º–∞—Ç–∏ —â–µ –≥–ª–∏–±—à–∏–π –∞–Ω–∞–ª—ñ–∑ ‚Äî –∑–∞–º–æ–≤—Ç–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω—É
            –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –≤—ñ–¥ –Ω–∞—à–∏—Ö –µ–∫—Å–ø–µ—Ä—Ç—ñ–≤. –ú–∏ –ø–æ–∫–∞–∂–µ–º–æ, –¥–µ —Å–∞–º–µ –≤–∞—à –∞–∫–∞—É–Ω—Ç –≤—Ç—Ä–∞—á–∞—î –≥—Ä–æ—à—ñ, —ñ
            –ø—ñ–¥–∫–∞–∂–µ–º–æ, —è–∫ —Ü–µ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏.
          </p>
          <ThanksPageContactForm
            handleSubmit={handleSubmit}
            formData={formData}
            handleInputChange={handleInputChange}
            isSubmitting={isSubmitting}
            submitMessage={submitMessage}
          />
        </div>
      </div>
      <button onClick={handleBack} className={scss.backButton}>
        <BsArrowLeftShort className={scss.iconBack} />
        –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å
      </button>
    </div>
  );
}
