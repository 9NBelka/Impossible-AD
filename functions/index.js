import { onDocumentCreated } from 'firebase-functions/v2/firestore';
import { initializeApp } from 'firebase-admin/app';
import axios from 'axios';
import dotenv from 'dotenv';

dotenv.config();

initializeApp();

const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

export const notifyTelegramOnNewContact = onDocumentCreated(
  'contactform/{docId}',
  async (event) => {
    console.log('–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', {
      TELEGRAM_TOKEN: TELEGRAM_TOKEN ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
      TELEGRAM_CHAT_ID: TELEGRAM_CHAT_ID ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
    });

    if (!TELEGRAM_TOKEN || !TELEGRAM_CHAT_ID) {
      console.error('–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã', {
        TELEGRAM_TOKEN: TELEGRAM_TOKEN ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
        TELEGRAM_CHAT_ID: TELEGRAM_CHAT_ID ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
      });
      return;
    }

    const newFormData = event.data.data();
    console.log('–î–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', newFormData);

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –£–∫—Ä–∞–∏–Ω—ã (Europe/Kyiv, UTC+3)
    let formattedDate = '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    if (newFormData.dateCreate) {
      try {
        const date = new Date(newFormData.dateCreate);
        formattedDate = date
          .toLocaleString('uk-UA', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit',
            timeZone: 'Europe/Kyiv',
          })
          .replace(',', '');
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã:', error.message);
      }
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç source
    let formSource;
    switch (newFormData.source) {
      case 'thanks':
        formSource = '—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏';
        break;
      case 'thanks-sto':
        formSource = '—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –°–¢–û';
        break;
      case 'googleAdsAudit':
        formSource = '—Å—Ç—Ä–∞–Ω–∏—Ü–∞ GoogleAdsAudit';
        break;
      case 'googleAds':
        formSource = '—Å—Ç—Ä–∞–Ω–∏—Ü–∞ GoogleAds';
        break;
      case 'webdevelopment':
        formSource = '—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏';
        break;
      case 'businessAutomation':
        formSource = '—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏';
        break;
      case 'sto':
        formSource = '—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –°–¢–û';
        break;
      case 'stoHero':
        formSource = '—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –°–¢–û HeroBlock';
        break;
      default:
        formSource = '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞';
    }

    const messageParts = [
      `üî• *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!* üî•`,
      `–ò—Å—Ç–æ—á–Ω–∏–∫: ${formSource}\n`,
      '',
      `üë§ *–ò–º—è*: ${newFormData.name || '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ'}`,
      newFormData.source !== 'sto' && newFormData.source !== 'stoHero'
        ? `üìß *Email*: ${newFormData.email || '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ'}`
        : null,
      newFormData.source === 'sto'
        ? `
üè¢ *–ì–æ—Ä–æ–¥*: ${newFormData.city || '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üöó *–ù–∞–∑–≤–∞–Ω–∏–µ –°–¢–û*: ${newFormData.companySTO || '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üîó *–°–∞–π—Ç*: ${newFormData.site || '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ'}
`
        : null,
      newFormData.source === 'stoHero'
        ? `üè¢ *–ì–æ—Ä–æ–¥*: ${newFormData.city || '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ'}`
        : null,
      newFormData.source === ''
        ? `
üè¢ *–ö–æ–º–ø–∞–Ω–∏—è*: ${newFormData.company || '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ*: ${newFormData.message || '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ'}`
        : null,
      '',
      `üì± *–¢–µ–ª–µ—Ñ–æ–Ω*: ${newFormData.phone || '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ'}`,
      `‚öôÔ∏è *–£—Å–ª—É–≥–∞*: ${newFormData.plan || '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ'}`,
      `üìÖ *–î–∞—Ç–∞*: ${formattedDate}`,
      `‚è≥ *–°—Ç–∞—Ç—É—Å*: ${newFormData.status || '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ'}`,
    ];

    // –§–∏–ª—å—Ç—Ä—É–µ–º null –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏, –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –ø–µ—Ä–µ–Ω–æ—Å–æ–º —Å—Ç—Ä–æ–∫
    const message = messageParts.filter((part) => part !== null && part.trim() !== '').join('\n');

    try {
      const response = await axios.post(
        `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`,
        {
          chat_id: TELEGRAM_CHAT_ID,
          text: message,
          parse_mode: 'Markdown',
        },
      );
      console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:', response.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', {
        message: error.message,
        response: error.response?.data,
        status: error.response?.status,
      });
    }
  },
);
